# HAL config file for Pico Systems USC board
#
# Connect motion controller I/Os
# HURCO BMC30 JAKE FREESE 01/19/2016

# connect limit/home switch outputs to motion controller
newsig Xminlim bit
newsig Xmaxlim  bit
newsig Xhome bit
linksp Xminlim <= ppmc.0.din.01.in-not
linksp Xminlim => axis.0.neg-lim-sw-in
linksp Xmaxlim <= ppmc.0.din.02.in-not
linksp Xmaxlim => axis.0.pos-lim-sw-in
linksp Xhome <= ppmc.0.din.00.in-not      #need to address
linksp Xhome => axis.0.home-sw-in

newsig Yminlim bit
newsig Ymaxlim  bit
newsig Yhome bit
linksp Yminlim <= ppmc.0.din.04.in-not
linksp Yminlim => axis.1.neg-lim-sw-in
linksp Ymaxlim <= ppmc.0.din.05.in-not
linksp Ymaxlim => axis.1.pos-lim-sw-in
linksp Yhome <= ppmc.0.din.04.in-not    #need to address
linksp Yhome => axis.1.home-sw-in

newsig Zminlim bit
newsig Zmaxlim  bit
newsig Zhome bit
linksp Zminlim <= ppmc.0.din.07.in-not
linksp Zminlim => axis.2.neg-lim-sw-in
linksp Zmaxlim <= ppmc.0.din.08.in-not
linksp Zmaxlim => axis.2.pos-lim-sw-in
linksp Zhome <= ppmc.0.din.08.in-not     #need to address
linksp Zhome => axis.2.home-sw-in        

newsig Aminlim bit                     #need to address
newsig Amaxlim  bit
newsig Ahome bit
linksp Aminlim <= ppmc.0.din.12.in-not
linksp Aminlim => axis.3.neg-lim-sw-in
linksp Amaxlim <= ppmc.0.din.13.in-not
linksp Amaxlim => axis.3.pos-lim-sw-in
linksp Ahome <= ppmc.0.din.11.in
linksp Ahome => axis.3.home-sw-in


# connect index pulses to motion controller
# do these when index pulsing is figured out
newsig Xindex bit
newsig Yindex  bit
newsig Zindex bit
linksp Xindex <= ppmc.0.encoder.00.index-enable
linksp Xindex => axis.0.index-enable
linksp Yindex <= ppmc.0.encoder.01.index-enable
linksp Yindex => axis.1.index-enable
linksp Zindex <= ppmc.0.encoder.02.index-enable
linksp Zindex => axis.2.index-enable

#
# Connect I/O controller I/Os
#

# connect e-stop write/sense to I/O controller
# and ppmc's fault with estop's output, so  estop FF is reset, but
#      prevent continued estop signal from ppmc from holding FF cleared
newsig ppmcEstop bit
linksp ppmcEstop ppmc.0.din.estop.in
linksp ppmcEstop and2.0.in0
newsig EstopOkIn bit
linksp EstopOkIn estop-latch.0.fault-in
linksp EstopOkIn and2.0.out
newsig EstopOkOut bit
linksp EstopOkOut ppmc.0.dout.07.out
linksp EstopOkOut ppmc.0.dout.Estop.out
linksp EstopOkOut iocontrol.0.emc-enable-in
linksp EstopOkOut estop-latch.0.ok-out
linksp EstopOkOut and2.0.in1
newsig emc-estop-out bit
linksp emc-estop-out iocontrol.0.user-enable-out
linksp emc-estop-out estop-latch.0.ok-in
newsig emc-estop-reset bit
linksp emc-estop-reset iocontrol.0.user-request-enable
linksp emc-estop-reset estop-latch.0.reset

#newsig EstopSense bit
#newsig EstopWrite bit
#linksp EstopSense <= ppmc.0.din.estop.in-not
#linksp EstopSense => iocontrol.0.emc-enable-in
#linksp EstopWrite <= ppmc.0.dout.07.out
#linksp EstopWrite => iocontrol.0.user-enable-out
#estop may need to be inverted

# connect spindle fwd/rev to I/O controller Spindle Forward Run 1 SSR 8
newsig SpindleFwd bit
newsig SpindleRev bit
linksp SpindleFwd <= ppmc.0.dout.07.out
linksp SpindleFwd => motion.spindle-forward
linksp SpindleRev <= ppmc.0.dout.01.out      #no reverse run
linksp SpindleRev => motion.spindle-reverse

# Spindle Cooler             SSR 2


# Servo Alarm Reset          SSR 4

# Low Speed Winding Select   SSR 5

# Orient Command             SSR 6
# Orient Complete            DI 9  

# Spindle E STOP             SSR 7

# Spindle Alarm              DI 10


# connect spindle speed up/down to I/O controller  Speed command on DAC CARD
#newsig SpindleUp bit
#newsig SpindleDown bit
#linksp SpindleUp <= ppmc.0.dout.06.out
#linksp SpindleUp => motion.spindle-incr-speed
#linksp SpindleDown <= ppmc.0.dout.05.out
#linksp SpindleDown => motion.spindle-decr-speed

# connect spindle brake to I/O controller       #no spindle brake 
newsig SpindleBrakeOn bit
linksp SpindleBrakeOn <= ppmc.0.dout.02.out
linksp SpindleBrakeOn => motion.spindle-brake     

# connect mist/flood coolant to I/O controller  SSR 16 
newsig MistOn bit
newsig FloodOn bit
linksp MistOn <= ppmc.0.dout.03.out             #No Mist 
linksp MistOn => iocontrol.0.coolant-mist
linksp FloodOn <= ppmc.0.dout.15.out            # ON 2 SSR 8 
linksp FloodOn => iocontrol.0.coolant-flood

# Way Lube Pump       SSR 3
# Way Lube Level      DI 27

# Air Pressure Switch DI 13 

# X Torque            DI 16
# Y Torque            DI 17
# Z Torque            DI 18
# S Torque            DI 19

# TOOL CHANGER
# Mag POS             DI 20
# Mag Right           DI 21  SSR 11
# Mag Left            DI 22  SSR 12
# Mag Down            DI 23  SSR 13
# Mag UP              DI 24  SSR 14
# Mag REF             DI 25  
# Tool Unclamp BUT    DI 26
# Tool Unclamp        SSR 10 
# Spindle Limit +     DI 11
# Spindle Limit -     DI 12 
# Mag ROTATE          SSR 9

# Cabinet Coolers     SSR 15

